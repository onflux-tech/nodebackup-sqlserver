---
description: 
globs: 
alwaysApply: true
---
# üìã √çndice das Regras do Cursor - NodeBackup

## üéØ Vis√£o Geral

Este conjunto de regras fornece diretrizes completas para desenvolvimento da aplica√ß√£o **NodeBackup SQL Server v1.0.0** - uma solu√ß√£o de backup automatizado compat√≠vel com **Node.js 12** e distribu√≠da como execut√°vel √∫nico para Windows, com **arquitetura modular** moderna, **logs em tempo real** e **notifica√ß√µes multi-canal**.

## üìö Regras Dispon√≠veis

### 1. üèóÔ∏è [Vis√£o Geral do Projeto](mdc:projeto-nodebackup.mdc)

**Escopo**: Arquitetura modular, tecnologias e estrutura atual v1.0.0

- Descri√ß√£o completa do projeto em produ√ß√£o
- Stack tecnol√≥gica (Node 12, Express, SQL Server, SQLite, WebSocket)
- Mapeamento da estrutura modular (frontend + backend)
- Sistema de configura√ß√£o criptografada
- Processo de build com assets embarcados
- **Arquitetura modular**: 11 m√≥dulos JS e 5 m√≥dulos CSS
- **Logs em tempo real** via WebSocket
- **Sistema de auto-update** integrado
- **Notifica√ß√µes multi-canal** (E-mail SMTP + WhatsApp WuzAPI)

### 2. üõ†Ô∏è [Padr√µes de Desenvolvimento](mdc:padroes-desenvolvimento.mdc)
**Escopo**: Compatibilidade Node 12, estrutura modular e boas pr√°ticas

- Compatibilidade obrigat√≥ria com Node.js 12.x
- **Padr√µes de estrutura modular** (frontend/backend)
- **Organiza√ß√£o de m√≥dulos** JS (ES6) e CSS (vari√°veis)
- CommonJS vs ES Modules
- Tratamento de erros e logging
- Configura√ß√£o segura e criptografia
- **Padr√µes WebSocket** e logs em tempo real
- **CustomSessionStore** para sess√µes
- **M√©tricas de qualidade** v1.0.0
- **Checklist** para desenvolvimento modular

### 3. üåê [Frontend e API](mdc:frontend-api-patterns.mdc)
**Escopo**: Interface web modular v1.0.0, padr√µes de API REST e UX moderna

- **Estrutura modular** da interface web (5 CSS + 11 JS)
- **Sistema de design** com vari√°veis CSS e temas
- Padr√µes de API REST com rotas modulares
- **Middleware de autentica√ß√£o** centralizado
- Componentes reutiliz√°veis modernos
- Performance e compatibilidade browser
- **Sistema anti-FOUC** implementado
- Responsividade mobile-first completa
- **WebSocket integration** e logs em tempo real
- **Melhores pr√°ticas** v1.0.0

### 4. üöÄ [Deployment e Versionamento](mdc:deployment-versionamento.mdc)

**Escopo**: Build, releases e distribui√ß√£o v1.0.0

- Versionamento sem√¢ntico (v1.0.0 atual)
- Processo de build com pkg
- Assets embarcados (7za.exe, nssm.exe, public/ modular)
- GitHub Releases e CI/CD
- Instalador NSIS com modo silencioso
- Troubleshooting de build
- **Roadmap** v1.1.0+ definido

### 5. üìà [Roadmap e Tasklist](mdc:roadmap-tasklist.mdc)
**Escopo**: Pr√≥ximas implementa√ß√µes p√≥s v1.0.0

- **Estado atual**: v1.0.0 Release Est√°vel
- **Pr√≥ximo**: v1.1.0 - Backup Multi-Fonte (6-8 semanas)
- Fases de desenvolvimento detalhadas
- Tasklist por feature
- **Fase 3**: Expans√£o das Fontes (Arquivos + MySQL/PostgreSQL)
- **Fase 4**: Cloud Integration (AWS S3, Google Drive)
- **Fase 5**: Funcionalidades Premium (Restaura√ß√£o, Criptografia)
- Melhorias de infraestrutura planejadas
- M√©tricas de progresso atualizadas

## üéØ Como Usar Estas Regras

### Para Desenvolvimento Ativo

1. **Consulte** [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) para estrutura modular
2. **Verifique** [frontend-api-patterns.mdc](mdc:frontend-api-patterns.mdc) para mudan√ßas na interface
3. **Siga** os padr√µes de commit em [deployment-versionamento.mdc](mdc:deployment-versionamento.mdc)
4. **Use** a estrutura modular estabelecida para adicionar novas funcionalidades
5. **Considere** integra√ß√£o WebSocket para funcionalidades em tempo real

### Para Novas Features

1. **Consulte** [roadmap-tasklist.mdc](mdc:roadmap-tasklist.mdc) para ver se j√° est√° planejado
2. **Crie** m√≥dulos JS/CSS apropriados conforme [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc)
3. **Use** rotas modulares conforme [frontend-api-patterns.mdc](mdc:frontend-api-patterns.mdc)
4. **Teste** o build conforme [deployment-versionamento.mdc](mdc:deployment-versionamento.mdc)
5. **Avalie** necessidade de comunica√ß√£o WebSocket
6. **Documente** usando JSDoc e coment√°rios apropriados

### Para Entendimento Geral

1. **Comece** com [projeto-nodebackup.mdc](mdc:projeto-nodebackup.mdc) para overview completo
2. **Explore** estrutura modular documentada nas regras
3. **Consulte** [roadmap-tasklist.mdc](mdc:roadmap-tasklist.mdc) para contexto futuro
4. **Revise** m√©tricas de qualidade em [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc)

## ‚ö†Ô∏è Restri√ß√µes Importantes

### üî¥ Compatibilidade Cr√≠tica

- **Node.js 12.x**: Nunca quebrar compatibilidade
- **Windows 7+**: Execut√°vel deve funcionar em sistemas antigos
- **SQL Server 2008+**: Manter suporte a vers√µes legadas
- **Assets Embarcados**: 7za.exe e nssm.exe obrigat√≥rios
- **Modularidade**: Manter separa√ß√£o de responsabilidades
- **WebSocket**: Deve ser compat√≠vel com Node 12
- **CustomSessionStore**: N√£o usar depend√™ncias externas de sess√£o

### üü° Limita√ß√µes T√©cnicas v1.0.0

- **Tamanho Execut√°vel**: < 100MB
- **Interface Web**: < 100KB total (74KB JS + 25KB CSS - modular)
- **Depend√™ncias**: Evitar bibliotecas que exijam Node 14+
- **Build Target**: pkg node12-win-x64 obrigat√≥rio
- **M√≥dulos**: Seguir padr√µes estabelecidos
- **WebSocket**: Deve ter fallbacks apropriados
- **Auto-update**: Deve ser completamente transparente
- **Performance**: < 200MB RAM, < 5s startup

## üöÄ Estado Atual vs Pr√≥ximos Passos

### ‚úÖ Implementado (v1.0.0 - Release Est√°vel)

- **Base S√≥lida**: Todas as funcionalidades core implementadas e testadas
- **Arquitetura Modular**: Frontend e backend completamente organizados
- **CSS Modular**: 5 arquivos especializados (base, components, layout, login, responsive)
- **JavaScript Modular**: 11 m√≥dulos espec√≠ficos com responsabilidades claras
- **Backend Reorganizado**: Rotas separadas por funcionalidade com middleware dedicado
- **Interface Modernizada**: Tema claro/escuro, responsiva, mobile-first
- **Sistema Anti-FOUC**: Script inline implementado
- **Painel de Hist√≥rico**: Visualiza√ß√£o completa com SQLite
- **Pol√≠tica de Reten√ß√£o**: Limpeza autom√°tica configur√°vel
- **Logs em Tempo Real**: WebSocket com Socket.IO para streaming de logs
- **Sess√µes Persistentes**: CustomSessionStore com armazenamento JSON
- **Auto-Update**: Sistema completo de atualiza√ß√£o autom√°tica transparente
- **Instalador Silencioso**: NSIS otimizado para modo /S sem interrup√ß√µes
- **Notifica√ß√µes E-mail**: Sistema SMTP completo com templates HTML responsivos
- **Notifica√ß√µes WhatsApp**: Sistema WuzAPI completo com configura√ß√£o web
- **Performance Otimizada**: Valida√ß√£o de mem√≥ria e preven√ß√£o de concorr√™ncia

### üéØ Pr√≥xima Prioridade (v1.1.0 - Backup Multi-Fonte)

- **Backup de Arquivos**: Sele√ß√£o de diret√≥rios e arquivos
- **MySQL Support**: Integra√ß√£o com mysqldump
- **PostgreSQL Support**: Integra√ß√£o com pg_dump
- **Interface Unificada**: Gerenciamento de m√∫ltiplas fontes

### üîÆ Roadmap v1.x.x

- **v1.1.0**: Backup Multi-Fonte (6-8 semanas)
- **v1.2.0**: Cloud Integration (AWS S3, Google Drive)
- **v2.0.0**: Funcionalidades Premium (Restaura√ß√£o, Criptografia, Multi-tenancy)

## üìä Melhorias da v1.0.0

### üèóÔ∏è **Arquitetura**

- **Modularidade**: 100% separa√ß√£o de responsabilidades
- **Manutenibilidade**: F√°cil localiza√ß√£o e edi√ß√£o de funcionalidades
- **Escalabilidade**: Base s√≥lida para expans√£o r√°pida
- **Performance**: Carregamento otimizado e cache inteligente
- **WebSocket**: Comunica√ß√£o em tempo real integrada
- **Auto-update**: Sistema completo e transparente

### üé® **Frontend**

- **CSS Variables**: Sistema de design consistente
- **Responsividade**: Mobile-first com breakpoints definidos
- **Temas**: Sistema robusto claro/escuro
- **Componentes**: Reutiliz√°veis e bem documentados
- **Interface de Logs**: Tempo real com controles interativos
- **Indicador de Vers√£o**: Modal de atualiza√ß√£o integrado
- **Interface de Notifica√ß√µes**: SMTP e WhatsApp com teste integrado
- **Templates Responsivos**: E-mail e WhatsApp otimizados

### üîß **Backend**

- **Rotas Modulares**: Separadas por funcionalidade
- **Middleware**: Autentica√ß√£o centralizada
- **API Consistente**: Padr√µes de resposta unificados
- **Error Handling**: Tratamento robusto e informativo
- **WebSocket Server**: Com autentica√ß√£o integrada
- **Sess√µes Persistentes**: CustomSessionStore robusto
- **Servi√ßo Auto-Update**: Integra√ß√£o com GitHub API
- **Servi√ßos de Notifica√ß√µes**: SMTP e WhatsApp completos
- **Valida√ß√£o de Recursos**: Mem√≥ria e concorr√™ncia

## üìû Quando Consultar Cada Regra (v1.0.0)

| Situa√ß√£o                      | Regra Principal               | Regras Secund√°rias           |
| ----- | ----- | ---- |
| **Novo no projeto**           | [projeto-nodebackup.mdc](mdc:projeto-nodebackup.mdc)       | Todas                        |
| **Desenvolvimento modular**   | [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) | [frontend-api-patterns.mdc](mdc:frontend-api-patterns.mdc) |
| **Adicionando m√≥dulo CSS/JS** | [frontend-api-patterns.mdc](mdc:frontend-api-patterns.mdc) | [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) |
| **Nova rota API**             | [frontend-api-patterns.mdc](mdc:frontend-api-patterns.mdc) | [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) |
| **WebSocket/Tempo Real**      | [frontend-api-patterns.mdc](mdc:frontend-api-patterns.mdc) | [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) |
| **Fazendo release**           | [deployment-versionamento.mdc](mdc:deployment-versionamento.mdc) | Todas                        |
| **Bug cr√≠tico**               | [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) | [projeto-nodebackup.mdc](mdc:projeto-nodebackup.mdc) |
| **Planejamento features**     | [roadmap-tasklist.mdc](mdc:roadmap-tasklist.mdc) | [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) |
| **Performance/Otimiza√ß√£o**    | [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) | [frontend-api-patterns.mdc](mdc:frontend-api-patterns.mdc) |

## üîÑ Vantagens da Arquitetura v1.0.0

### üìà **Desenvolvimento**

- **Localiza√ß√£o R√°pida**: Funcionalidade espec√≠fica em arquivo dedicado
- **Edi√ß√£o Segura**: Mudan√ßas isoladas sem impacto em outras √°reas
- **Debugging Eficiente**: Logs e erros com contexto espec√≠fico
- **Code Review**: Mudan√ßas focadas e f√°ceis de revisar
- **Logs em tempo real**: Debugging instant√¢neo via WebSocket

### üöÄ **Performance**

- **Carregamento Otimizado**: M√≥dulos carregados conforme necessidade
- **Cache Inteligente**: M√≥dulos cachados independentemente
- **Bundle Size**: Controle granular do tamanho de cada √°rea
- **Responsividade**: CSS especializado para cada contexto
- **WebSocket Eficiente**: Comunica√ß√£o em tempo real otimizada
- **Valida√ß√£o de Recursos**: Preven√ß√£o de problemas de mem√≥ria

### üîß **Manuten√ß√£o**

- **Atualiza√ß√µes Isoladas**: Mudan√ßa em um m√≥dulo n√£o afeta outros
- **Testes Focados**: Cada m√≥dulo pode ser testado independentemente
- **Documenta√ß√£o Clara**: Responsabilidade bem definida
- **Escalabilidade**: F√°cil adi√ß√£o de novas funcionalidades
- **Monitoramento**: Logs facilitam manuten√ß√£o
- **Auto-Update**: Atualiza√ß√µes sem interven√ß√£o manual

---

**üí° Dica**: A vers√£o 1.0.0 estabelece uma base s√≥lida e profissional. Use Ctrl+F para buscar funcionalidades espec√≠ficas dentro de cada m√≥dulo, ou consulte os links `[arquivo.ext](mdc:arquivo.ext)` para navegar rapidamente pelos arquivos do projeto.
