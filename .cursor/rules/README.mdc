---
description: 
globs: 
alwaysApply: true
---
# üìã √çndice das Regras do Cursor - NodeBackup

## üéØ Vis√£o Geral

Este conjunto de regras fornece diretrizes completas para desenvolvimento da aplica√ß√£o **NodeBackup SQL Server** - uma solu√ß√£o de backup automatizado compat√≠vel com **Node.js 12** e distribu√≠da como execut√°vel √∫nico para Windows, agora com **arquitetura modular** moderna e **logs em tempo real**.

## üìö Regras Dispon√≠veis

### 1. üèóÔ∏è [Vis√£o Geral do Projeto](mdc:projeto-nodebackup.mdc)

**Escopo**: Arquitetura modular, tecnologias e estrutura atual

- Descri√ß√£o completa do projeto refatorado
- Stack tecnol√≥gica (Node 12, Express, SQL Server, SQLite, WebSocket)
- Mapeamento da estrutura modular (frontend + backend)
- Sistema de configura√ß√£o criptografada
- Processo de build com assets embarcados
- **ATUALIZADO**: Arquitetura modular com 11 m√≥dulos JS e 5 m√≥dulos CSS
- **ATUALIZADO**: Logs em tempo real via WebSocket
- **NOVO**: Sistema de auto-update integrado

### 2. üõ†Ô∏è [Padr√µes de Desenvolvimento](mdc:padroes-desenvolvimento.mdc)
**Escopo**: Compatibilidade Node 12, estrutura modular e boas pr√°ticas

- Compatibilidade obrigat√≥ria com Node.js 12.x
- **ATUALIZADO**: Padr√µes de estrutura modular (frontend/backend)
- **ATUALIZADO**: Organiza√ß√£o de m√≥dulos JS (ES6) e CSS (vari√°veis)
- CommonJS vs ES Modules
- Tratamento de erros e logging
- Configura√ß√£o segura e criptografia
- **NOVO**: Padr√µes WebSocket e logs em tempo real
- **ATUALIZADO**: Checklist para desenvolvimento modular

### 3. üåê [Frontend e API](mdc:frontend-api-patterns.mdc)
**Escopo**: Interface web modular, padr√µes de API REST e UX moderna

- **REFATORADO**: Estrutura modular da interface web (5 CSS + 11 JS)
- **NOVO**: Sistema de design com vari√°veis CSS e temas
- Padr√µes de API REST com rotas modulares
- **NOVO**: Middleware de autentica√ß√£o centralizado
- Componentes reutiliz√°veis modernos
- Performance e compatibilidade browser
- **NOVO**: Sistema anti-FOUC implementado
- Responsividade mobile-first completa
- **NOVO**: WebSocket integration e logs em tempo real

### 4. üöÄ [Deployment e Versionamento](mdc:deployment-versionamento.mdc)

**Escopo**: Build, releases e distribui√ß√£o

- Versionamento sem√¢ntico (v0.5.0 atual)
- Processo de build com pkg
- Assets embarcados (7za.exe, nssm.exe, public/ modular)
- GitHub Releases e CI/CD
- Instalador NSIS opcional
- Troubleshooting de build

### 5. üìà [Roadmap e Tasklist](mdc:roadmap-tasklist.mdc)
**Escopo**: Pr√≥ximas implementa√ß√µes sobre base modular

- **ATUALIZADO**: Estado atual v0.5.0 (notifica√ß√µes WhatsApp)
- **ATUALIZADO**: Fases de desenvolvimento com base modular
- Tasklist detalhada por feature
- **CONCLU√çDO**: v0.3.0 - Logs em Tempo Real (WebSocket)
- **CONCLU√çDO**: v0.3.1 - Sistema Auto-Update (GitHub)
- **CONCLU√çDO**: v0.4.0 - Notifica√ß√µes por E-mail (SMTP)
- **CONCLU√çDO**: v0.5.0 - Notifica√ß√µes WhatsApp (WuzAPI)
- **PR√ìXIMO**: v1.0.0 - Release est√°vel consolidado
- Estimativas de tempo e prioridades
- Melhorias de infraestrutura
- Crit√©rios de qualidade

## üéØ Como Usar Estas Regras

### Para Desenvolvimento Ativo

1. **Consulte** [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) para estrutura modular
2. **Verifique** [frontend-api-patterns.mdc](mdc:frontend-api-patterns.mdc) para mudan√ßas na interface
3. **Siga** os padr√µes de commit em [deployment-versionamento.mdc](mdc:deployment-versionamento.mdc)
4. **ATUALIZADO**: Use a estrutura modular para adicionar novas funcionalidades
5. **NOVO**: Considere integra√ß√£o WebSocket para funcionalidades em tempo real

### Para Novas Features

1. **Consulte** [roadmap-tasklist.mdc](mdc:roadmap-tasklist.mdc) para ver se j√° est√° planejado
2. **ATUALIZADO**: Crie m√≥dulos JS/CSS apropriados conforme [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc)
3. **ATUALIZADO**: Use rotas modulares conforme [frontend-api-patterns.mdc](mdc:frontend-api-patterns.mdc)
4. **Teste** o build conforme [deployment-versionamento.mdc](mdc:deployment-versionamento.mdc)
5. **NOVO**: Avalie necessidade de comunica√ß√£o WebSocket

### Para Entendimento Geral

1. **Comece** com [projeto-nodebackup.mdc](mdc:projeto-nodebackup.mdc) para overview modular
2. **Explore** estrutura modular documentada nas regras
3. **Consulte** [roadmap-tasklist.mdc](mdc:roadmap-tasklist.mdc) para contexto futuro

## ‚ö†Ô∏è Restri√ß√µes Importantes

### üî¥ Compatibilidade Cr√≠tica

- **Node.js 12.x**: Nunca quebrar compatibilidade
- **Windows 7+**: Execut√°vel deve funcionar em sistemas antigos
- **SQL Server 2008+**: Manter suporte a vers√µes legadas
- **Assets Embarcados**: 7za.exe e nssm.exe obrigat√≥rios
- **ATUALIZADO**: Modularidade deve manter compatibilidade total
- **NOVO**: WebSocket deve ser compat√≠vel com Node 12

### üü° Limita√ß√µes T√©cnicas Atualizadas

- **Tamanho Execut√°vel**: < 100MB
- **Interface Web**: < 85KB total (56KB JS + 25KB CSS - modular)
- **Depend√™ncias**: Evitar bibliotecas que exijam Node 14+
- **Build Target**: pkg node12-win-x64 obrigat√≥rio
- **ATUALIZADO**: M√≥dulos devem seguir padr√µes estabelecidos
- **WebSocket**: Deve ter fallbacks apropriados
- **NOVO**: Auto-update deve ser completamente transparente

## üöÄ Estado Atual vs Pr√≥ximos Passos

### ‚úÖ Implementado (v0.5.0 - Notifica√ß√µes WhatsApp)

- **Base S√≥lida**: Todas as funcionalidades v0.1.0, v0.2.0, v0.2.2, v0.3.0 e v0.4.0
- **CONSOLIDADO - Arquitetura Modular**: Frontend e backend completamente refatorados
- **CSS Modular**: 5 arquivos especializados (base, components, layout, login, responsive)
- **JavaScript Modular**: 11 m√≥dulos espec√≠ficos (ui, config, database, history, storage, schedule, auth, api, logs, updater, notifications, whatsapp)
- **Backend Reorganizado**: Rotas separadas por funcionalidade com middleware dedicado
- **Interface Modernizada**: Tema claro/escuro, responsiva, mobile-first
- **Sistema Anti-FOUC**: Script inline implementado
- **Painel de Hist√≥rico**: Visualiza√ß√£o completa com SQLite
- **Pol√≠tica de Reten√ß√£o**: Limpeza autom√°tica configur√°vel
- **Logs em Tempo Real**: WebSocket com Socket.IO para streaming de logs
- **Sess√µes Persistentes**: SQLite para armazenamento robusto de sess√µes
- **Auto-Update**: Sistema completo de atualiza√ß√£o autom√°tica transparente
- **Instalador Silencioso**: NSIS otimizado para modo /S sem interrup√ß√µes
- **Notifica√ß√µes E-mail**: Sistema SMTP completo com templates HTML responsivos
- **Configura√ß√£o SMTP**: Interface web com teste de conex√£o e diagn√≥stico avan√ßado
- **NOVO - Notifica√ß√µes WhatsApp**: Sistema WuzAPI completo com configura√ß√£o de URL e token
- **NOVO - Interface WhatsApp**: Nova aba com gerenciamento de n√∫meros e testes integrados

### üéØ Pr√≥xima Prioridade (v1.0.0 - Release Est√°vel)

- **Consolida√ß√£o Final**: Polish e refinamento de todas as funcionalidades
- **Testes Abrangentes**: Valida√ß√£o completa de compatibilidade
- **Documenta√ß√£o Completa**: Finaliza√ß√£o de guias e troubleshooting

### üîÆ Roadmap v0.x.x Atualizado

- **v0.4.0**: ‚úÖ Notifica√ß√µes por E-mail (SMTP) - Conclu√≠do
- **v0.5.0**: ‚úÖ Notifica√ß√µes WhatsApp (WuzAPI) - Conclu√≠do
- **v1.0.0**: Release est√°vel consolidado - 2-3 semanas
- **v1.1.0**: Backup Multi-Fonte - 6-8 semanas

## üìä Melhorias Implementadas na v0.5.0

### üèóÔ∏è **Arquitetura**

- **Modularidade**: C√≥digo separado por responsabilidade
- **Manutenibilidade**: F√°cil localiza√ß√£o e edi√ß√£o de funcionalidades
- **Escalabilidade**: Base s√≥lida para expans√£o r√°pida
- **Performance**: Carregamento otimizado e cache inteligente
- **WebSocket**: Comunica√ß√£o em tempo real integrada
- **NOVO**: Sistema de auto-update completo e transparente

### üé® **Frontend**

- **CSS Variables**: Sistema de design consistente
- **Responsividade**: Mobile-first com breakpoints definidos
- **Temas**: Sistema robusto claro/escuro
- **Componentes**: Reutiliz√°veis e bem documentados
- **Interface de Logs**: Tempo real com controles interativos
- **Indicador de Vers√£o**: Modal de atualiza√ß√£o integrado
- **NOVO**: Interface de notifica√ß√µes SMTP com teste de conex√£o
- **NOVO**: Templates de e-mail responsivos com tema claro/escuro

### üîß **Backend**

- **Rotas Modulares**: Separadas por funcionalidade
- **Middleware**: Autentica√ß√£o centralizada
- **API Consistente**: Padr√µes de resposta unificados
- **Error Handling**: Tratamento robusto e informativo
- **WebSocket Server**: Com autentica√ß√£o integrada
- **Sess√µes Persistentes**: Armazenamento com SQLite
- **Servi√ßo Auto-Update**: Integra√ß√£o com GitHub API
- **Servi√ßo de notifica√ß√µes SMTP** com nodemailer
- **Sistema de diagn√≥stico avan√ßado** para problemas SMTP
- **NOVO**: Servi√ßo de notifica√ß√µes WhatsApp via WuzAPI
- **NOVO**: Sistema de diagn√≥stico inteligente para configura√ß√£o WhatsApp
- **NOVO**: Interface web para configura√ß√£o e teste de WuzAPI
- **NOVO**: Gerenciamento de m√∫ltiplos n√∫meros com valida√ß√£o autom√°tica

## üìû Quando Consultar Cada Regra (Atualizado)

| Situa√ß√£o                      | Regra Principal               | Regras Secund√°rias           |
| ----------------------------- | ----------------------------- | ---------------------------- |
| **Novo no projeto**           | [projeto-nodebackup.mdc](mdc:projeto-nodebackup.mdc)       | Todas                        |
| **Desenvolvimento modular**   | [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) | [frontend-api-patterns.mdc](mdc:frontend-api-patterns.mdc) |
| **Adicionando m√≥dulo CSS/JS** | [frontend-api-patterns.mdc](mdc:frontend-api-patterns.mdc) | [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) |
| **Nova rota API**             | [frontend-api-patterns.mdc](mdc:frontend-api-patterns.mdc) | [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) |
| **WebSocket/Tempo Real**      | [frontend-api-patterns.mdc](mdc:frontend-api-patterns.mdc) | [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) |
| **Fazendo release**           | [deployment-versionamento.mdc](mdc:deployment-versionamento.mdc) | Todas                        |
| **Bug cr√≠tico**               | [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) | [projeto-nodebackup.mdc](mdc:projeto-nodebackup.mdc) |
| **Planejamento features**     | [roadmap-tasklist.mdc](mdc:roadmap-tasklist.mdc) | [padroes-desenvolvimento.mdc](mdc:padroes-desenvolvimento.mdc) |

## üîÑ Vantagens da Arquitetura Modular

### üìà **Desenvolvimento**

- **Localiza√ß√£o R√°pida**: Funcionalidade espec√≠fica em arquivo dedicado
- **Edi√ß√£o Segura**: Mudan√ßas isoladas sem impacto em outras √°reas
- **Debugging Eficiente**: Logs e erros com contexto espec√≠fico
- **Code Review**: Mudan√ßas focadas e f√°ceis de revisar
- **NOVO**: Logs em tempo real para debugging instant√¢neo

### üöÄ **Performance**

- **Carregamento Otimizado**: M√≥dulos carregados conforme necessidade
- **Cache Inteligente**: M√≥dulos cachados independentemente
- **Bundle Size**: Controle granular do tamanho de cada √°rea
- **Responsividade**: CSS especializado para cada contexto
- **NOVO**: WebSocket eficiente para comunica√ß√£o em tempo real

### üîß **Manuten√ß√£o**

- **Atualiza√ß√µes Isoladas**: Mudan√ßa em um m√≥dulo n√£o afeta outros
- **Testes Focados**: Cada m√≥dulo pode ser testado independentemente
- **Documenta√ß√£o Clara**: Responsabilidade bem definida
- **Escalabilidade**: F√°cil adi√ß√£o de novas funcionalidades
- **NOVO**: Monitoramento em tempo real facilita manuten√ß√£o

---

**üí° Dica**: A nova estrutura modular com logs em tempo real permite desenvolvimento mais r√°pido e manuten√ß√£o mais f√°cil. Use Ctrl+F para buscar funcionalidades espec√≠ficas dentro de cada m√≥dulo, ou consulte os links `[arquivo.ext](mdc:arquivo.ext)` para navegar rapidamente pelos arquivos do projeto.
