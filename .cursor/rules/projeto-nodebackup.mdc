---
description: 
globs: 
alwaysApply: true
---
# Node-Backup: SQL Server - Vis√£o Geral do Projeto

## Descri√ß√£o do Projeto
O Node-Backup √© uma aplica√ß√£o Windows para automatiza√ß√£o de backups de bancos SQL Server com interface web moderna e segura. A aplica√ß√£o:
- Gera backups `.bak` de m√∫ltiplos bancos SQL Server
- Comprime em arquivos `.7z` com alta compress√£o
- Envia para servidores FTP automaticamente
- Funciona como servi√ßo do Windows
- Interface web responsiva com autentica√ß√£o criptografada
- **Sistema de hist√≥rico completo** com SQLite
- **Pol√≠tica de reten√ß√£o** configur√°vel para limpeza autom√°tica
- **Arquitetura modular** frontend e backend

## Arquitetura Modular Atual

### Ponto de Entrada
- [src/app.js](mdc:src/app.js) - Entry point principal da aplica√ß√£o
- [src/server.js](mdc:src/server.js) - Servidor Express
- [src/config.js](mdc:src/config.js) - Sistema de configura√ß√£o criptografada

### Servi√ßos Core
- [src/services/database.js](mdc:src/services/database.js) - Backup e listagem de bancos SQL Server
- [src/services/ftp.js](mdc:src/services/ftp.js) - Upload para servidores FTP
- [src/services/history.js](mdc:src/services/history.js) - Gerenciamento hist√≥rico SQLite
- [src/services/scheduler.js](mdc:src/services/scheduler.js) - Agendamento de backups
- [src/services/windowsService.js](mdc:src/services/windowsService.js) - Instala√ß√£o como servi√ßo Windows

### Utilit√°rios
- [src/utils/logger.js](mdc:src/utils/logger.js) - Sistema de logging com rota√ß√£o di√°ria
- [src/utils/encryption.js](mdc:src/utils/encryption.js) - Criptografia para configura√ß√µes
- [src/utils/errorHandler.js](mdc:src/utils/errorHandler.js) - Tratamento amig√°vel de erros

### API Modular (src/api/)
- **Middleware**: [src/api/middleware/auth.js](mdc:src/api/middleware/auth.js) - Autentica√ß√£o centralizada
- **Rotas por Funcionalidade**:
  - [src/api/routes/auth.js](mdc:src/api/routes/auth.js) - Login, logout, mudan√ßa senha
  - [src/api/routes/browse.js](mdc:src/api/routes/browse.js) - Navega√ß√£o arquivos/pastas
  - [src/api/routes/config.js](mdc:src/api/routes/config.js) - Configura√ß√µes aplica√ß√£o
  - [src/api/routes/database.js](mdc:src/api/routes/database.js) - Opera√ß√µes SQL Server
  - [src/api/routes/history.js](mdc:src/api/routes/history.js) - Hist√≥rico e estat√≠sticas
  - [src/api/routes/storage.js](mdc:src/api/routes/storage.js) - FTP e limpeza

### Interface Web Modular (public/)
- **CSS Modular (25KB total)**:
  - [public/css/base.css](mdc:public/css/base.css) - Vari√°veis, reset, temas (4KB)
  - [public/css/components.css](mdc:public/css/components.css) - Componentes UI (13KB)
  - [public/css/layout.css](mdc:public/css/layout.css) - Layout, header, sidebar (3KB)
  - [public/css/login.css](mdc:public/css/login.css) - Login/setup (2KB)
  - [public/css/responsive.css](mdc:public/css/responsive.css) - Media queries (3KB)

- **JavaScript Modular (35KB total)**:
  - [public/js/ui.js](mdc:public/js/ui.js) - Componentes UI, temas, toasts (5KB)
  - [public/js/config.js](mdc:public/js/config.js) - Configura√ß√µes (6KB)
  - [public/js/database.js](mdc:public/js/database.js) - Sele√ß√£o bancos (5KB)
  - [public/js/history.js](mdc:public/js/history.js) - Painel hist√≥rico (8KB)
  - [public/js/storage.js](mdc:public/js/storage.js) - FTP, limpeza (6KB)
  - [public/js/schedule.js](mdc:public/js/schedule.js) - Agendamento (2KB)
  - [public/js/auth.js](mdc:public/js/auth.js) - Autentica√ß√£o (1KB)
  - [public/js/api.js](mdc:public/js/api.js) - Requisi√ß√µes API (2KB)

- **HTML Pages**:
  - [public/index.html](mdc:public/index.html) - Dashboard principal
  - [public/login.html](mdc:public/login.html) - Tela de login
  - [public/setup.html](mdc:public/setup.html) - Configura√ß√£o inicial
  - [public/script.js](mdc:public/script.js) - Entry point JS (importa m√≥dulos)

## Stack Tecnol√≥gica
- **Runtime**: Node.js 12+ (compatibilidade obrigat√≥ria)
- **Framework Web**: Express.js 4.19.2
- **Banco Hist√≥rico**: SQLite 3 (via sql.js 1.8.0 - Node 12 compat√≠vel)
- **Banco Principal**: SQL Server (via mssql 6.3.2 e sqlcmd)
- **Autentica√ß√£o**: bcryptjs + express-session
- **Agendamento**: node-schedule 2.1.1
- **FTP**: basic-ftp 5.0.5
- **Logging**: winston 3.3.3 com winston-daily-rotate-file
- **Criptografia**: crypto-js 4.2.0
- **Compress√£o**: 7-Zip (7za.exe embarcado)
- **Servi√ßo Windows**: NSSM (nssm.exe embarcado)
- **Build**: pkg 5.8.1 para execut√°vel √∫nico
- **Frontend**: JavaScript ES6 Modules + CSS Variables

## Funcionalidades Implementadas (v0.2.2)

### üîê Autentica√ß√£o e Seguran√ßa
- Setup inicial obrigat√≥rio via web
- Sistema de login com hash bcrypt
- Middleware de autentica√ß√£o centralizado
- Configura√ß√µes criptografadas (config.enc)
- Preven√ß√£o FOUC (Flash of Unstyled Content)

### üíæ Backup e Armazenamento
- Backup autom√°tico SQL Server (.bak)
- Compress√£o 7-Zip alta performance
- Upload FTP automatizado
- Pol√≠tica de reten√ß√£o configur√°vel (v0.1.0)
- Modo Cl√°ssico vs Reten√ß√£o (timestamp)
- Limpeza autom√°tica local e FTP

### ‚è∞ Agendamento e Monitoramento  
- Agendamento flex√≠vel de backups
- Hist√≥rico completo com SQLite (v0.2.0)
- Estat√≠sticas detalhadas (total, sucessos, falhas, dura√ß√£o)
- Interface de hist√≥rico responsiva
- Filtros por status e pagina√ß√£o

### üé® Interface Moderna
- Design responsivo mobile-first
- Sistema dual de temas (claro/escuro)
- Sidebar colaps√°vel para mobile
- Componentes modularizados
- Toast notifications inteligentes
- Loading states em todas opera√ß√µes

### üîß Infraestrutura
- Instala√ß√£o como servi√ßo Windows (NSSM)
- Sistema de logs rotacionados
- Build automatizado (pkg)
- Execut√°vel autocontido

## Sistema de Build
- [scripts/build.js](mdc:scripts/build.js) - Embarca assets e gera execut√°vel
- [package.json](mdc:package.json) - Configura√ß√£o npm e scripts
- Target: Windows x64 com Node 12 (pkg node12-win-x64)
- Assets embarcados: 7za.exe, nssm.exe, pasta public/ completa

## Configura√ß√£o e Seguran√ßa
- Configura√ß√µes salvas em [config.enc](mdc:config.enc) criptografadas
- Primeira execu√ß√£o ativa setup inicial obrigat√≥rio
- Interface protegida por sess√µes autenticadas
- Logs rotacionados em [logs/](mdc:logs) com reten√ß√£o configur√°vel
- Hist√≥rico persistido em SQLite local

## Versionamento Atual
- **Vers√£o Atual**: v0.2.2 (Painel de Hist√≥rico + Refatora√ß√£o)
- **√öltima Release**: v0.2.0 (Painel de Hist√≥rico SQLite)
- **Release Anterior**: v0.1.0 (Pol√≠tica de Reten√ß√£o)
- **Pr√≥xima**: v0.3.0 (Logs em Tempo Real WebSocket)

## M√©tricas de Qualidade
- **Execut√°vel**: ~57MB (autocontido)
- **Frontend**: 60KB total (35KB JS + 25KB CSS)
- **Compatibilidade**: Windows 7+ x64
- **SQL Server**: 2008 R2+ at√© 2022
- **Performance**: < 200MB RAM, < 5s startup
- **Arquitetura**: Modular, manuten√≠vel, escal√°vel

## Pr√≥ximos Desenvolvimentos (Roadmap)
1. **v0.3.0**: Logs em Tempo Real (WebSocket)
2. **v0.4.0**: Notifica√ß√µes E-mail (SMTP)
3. **v0.5.0**: Integra√ß√£o Telegram/WhatsApp
4. **v1.0.0**: Release est√°vel completo

