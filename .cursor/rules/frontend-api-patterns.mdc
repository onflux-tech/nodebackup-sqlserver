---
description: 
globs: 
alwaysApply: true
---
# Frontend e API - Padr√µes de Interface Modular

## üåê Estrutura Modular da Interface Web

### Arquivos Frontend Principais (Refatorados)
- **CSS Modular (5 arquivos - 25KB total)**:
  - [public/css/base.css](mdc:public/css/base.css) - Vari√°veis CSS, reset, temas (4KB)
  - [public/css/components.css](mdc:public/css/components.css) - Componentes UI (13KB)
  - [public/css/layout.css](mdc:public/css/layout.css) - Layout, header, sidebar (3KB)
  - [public/css/login.css](mdc:public/css/login.css) - Estilos login/setup (2KB)
  - [public/css/responsive.css](mdc:public/css/responsive.css) - Media queries (3KB)

- **JavaScript Modular (8 arquivos - 35KB total)**:
  - [public/js/ui.js](mdc:public/js/ui.js) - Componentes UI, tema, toasts (5KB)
  - [public/js/config.js](mdc:public/js/config.js) - Gerenciamento configura√ß√µes (6KB)
  - [public/js/database.js](mdc:public/js/database.js) - Sele√ß√£o bancos SQL (5KB)
  - [public/js/history.js](mdc:public/js/history.js) - Painel hist√≥rico (8KB)
  - [public/js/storage.js](mdc:public/js/storage.js) - FTP e limpeza (6KB)
  - [public/js/schedule.js](mdc:public/js/schedule.js) - Agendamento (2KB)
  - [public/js/auth.js](mdc:public/js/auth.js) - Autentica√ß√£o (1KB)
  - [public/js/api.js](mdc:public/js/api.js) - Requisi√ß√µes API (2KB)

- **HTML Pages**:
  - [public/index.html](mdc:public/index.html) - Dashboard principal
  - [public/login.html](mdc:public/login.html) - Sistema login
  - [public/setup.html](mdc:public/setup.html) - Setup inicial

### Limita√ß√µes e Diretrizes Atualizadas
- **Modularidade**: C√≥digo separado por responsabilidade
- **Performance**: Total < 60KB (CSS + JS)
- **Compatibilidade**: IE11+, Chrome 60+, Firefox 55+
- **Temas**: Sistema dual (claro/escuro) com vari√°veis CSS
- **FOUC Prevention**: Script inline anti-flash implementado

## üîå Padr√µes de API REST Modularizada

### Estrutura de Rotas Refatorada
```javascript
// Rotas organizadas por m√≥dulos em src/api/routes/
‚îú‚îÄ‚îÄ auth.js         # POST /api/login, /api/logout, /api/change-password
‚îú‚îÄ‚îÄ browse.js       # GET /api/browse, POST /api/create-folder  
‚îú‚îÄ‚îÄ config.js       # GET /api/config, POST /api/config
‚îú‚îÄ‚îÄ database.js     # GET /api/list-databases, POST /api/test-connection
‚îú‚îÄ‚îÄ history.js      # GET /api/history, GET /api/history/stats
‚îî‚îÄ‚îÄ storage.js      # POST /api/test-ftp, /api/cleanup-local, /api/cleanup-ftp
```

### Middleware de Autentica√ß√£o Implementado
```javascript
// src/api/middleware/auth.js
const requireAuth = (req, res, next) => {
  if (config.isFirstRun) return next(); // Setup inicial
  if (!req.session.user) {
    return res.status(401).json({ error: 'Acesso negado' });
  }
  next();
};
```

### Padr√µes de Resposta API
```javascript
// ‚úÖ Sucesso (implementado)
{
  "message": "Opera√ß√£o realizada com sucesso",
  "data": { /* dados opcionais */ }
}

// ‚úÖ Erro estruturado (implementado)
{
  "error": "Mensagem amig√°vel",
  "details": "Detalhes t√©cnicos",
  "suggestions": ["Sugest√£o 1", "Sugest√£o 2"]
}
```

## üé® Sistema de Design Modular

### Vari√°veis CSS Implementadas
```css
/* Definidas em public/css/base.css */
:root {
  /* Cores base */
  --bg-primary: #ffffff;
  --text-primary: #0f172a;
  --border-primary: #e2e8f0;
  
  /* Espa√ßamento */
  --space-sm: 0.5rem;
  --space-md: 0.75rem;
  --space-lg: 1rem;
  
  /* Bordas e sombras */
  --radius-md: 0.5rem;
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1);
}

/* Tema escuro */
[data-theme="dark"] {
  --bg-primary: #0f172a;
  --text-primary: #f8fafc;
  --border-primary: #334155;
}
```

### Componentes Reutiliz√°veis Implementados

#### üîÑ Sistema de Loading (public/js/ui.js)
```javascript
export function toggleButtonLoading(button, isLoading) {
  button.disabled = isLoading;
  const textElement = button.querySelector('.btn-text');
  const spinnerElement = button.querySelector('.spinner');
  // ... implementa√ß√£o completa
}
```

#### üé® Sistema de Toasts (public/js/ui.js)
```javascript
export function showToast(message, type = 'success', duration = 4000) {
  // Toast com auto-close, hover pause, close button
}

export function showDetailedErrorToast(mainError, details, suggestions) {
  // Toast detalhado para erros complexos
}
```

#### üéØ Sistema de Temas (public/js/ui.js)
```javascript
export function setupThemeToggle() {
  // Toggle tema com persist√™ncia localStorage
  // Preven√ß√£o FOUC via script inline
  // Auto-reload de √≠cones Lucide
}
```

## üì± Responsividade Implementada

### Breakpoints CSS (public/css/responsive.css)
```css
/* Mobile first approach implementado */
@media (max-width: 1024px) { /* Tablets */ }
@media (max-width: 768px)  { /* Mobile large */ }
@media (max-width: 480px)  { /* Mobile small */ }
@media (max-width: 360px)  { /* Mobile extra small */ }
```

### Componentes Responsivos
- **Sidebar**: Colapsa para overlay mobile
- **Cards**: Grid responsivo com breakpoints
- **Tabelas**: Scroll horizontal em mobile
- **Formul√°rios**: Stacking autom√°tico em mobile
- **Modals**: Altura adapt√°vel por viewport

## üîí Seguran√ßa Frontend Implementada

### Valida√ß√£o e Sanitiza√ß√£o
```javascript
// Implementado em public/js/api.js
export async function apiFetch(url, options = {}) {
  try {
    const response = await fetch(url, {
      ...options,
      headers: { 'Content-Type': 'application/json', ...options.headers }
    });
    
    if (response.status === 401) {
      showToast('Sess√£o expirada. Redirecionando...', 'error');
      setTimeout(() => window.location.href = '/login.html', 1500);
      throw new Error('Unauthorized');
    }
    // ... tratamento adicional
  } catch (error) {
    console.error('API Error:', error);
    throw error;
  }
}
```

### Preven√ß√£o FOUC (Flash of Unstyled Content)
```html
<!-- Implementado em todos os HTMLs -->
<script>
  (function() {
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'dark') {
      document.documentElement.setAttribute('data-theme', 'dark');
    }
  })();
</script>
```

## üöÄ Performance Frontend Otimizada

### M√©tricas Atuais Implementadas
- **CSS Modular**: 25KB total (5 arquivos especializados)
- **JavaScript Modular**: 35KB total (8 m√≥dulos espec√≠ficos)
- **Loading Progressivo**: M√≥dulos carregados sob demanda
- **Cache Control**: Headers apropriados implementados

### Otimiza√ß√µes de UX Implementadas
- **Loading States**: Em todos os bot√µes e opera√ß√µes ass√≠ncronas
- **Error Handling**: Toasts informativos com sugest√µes
- **Tema Persistence**: LocalStorage com aplica√ß√£o imediata
- **Mobile First**: Design responsivo completo

## üìã Padr√µes para Desenvolvimento Modular

### Estrutura de Novos M√≥dulos JS
```javascript
// Template para novos m√≥dulos
// Exportar fun√ß√µes espec√≠ficas
export function setupNewFeature() {
  // Inicializa√ß√£o
}

export function handleNewAction() {
  // L√≥gica de a√ß√£o
}

// Importar no entry point (script.js)
import { setupNewFeature } from './js/new-feature.js';
```

### Estrutura de Novos Estilos CSS
```css
/* Adicionar em m√≥dulo apropriado */
/* components.css para novos componentes */
/* layout.css para mudan√ßas de estrutura */
/* responsive.css para media queries */

.new-component {
  /* Usar vari√°veis CSS */
  background-color: var(--bg-primary);
  color: var(--text-primary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-md);
  padding: var(--space-md);
}
```

## üîÑ APIs e Integra√ß√£o Backend

### Padr√£o de Rotas Implementado
```javascript
// src/api/routes/[module].js
const express = require('express');
const router = express.Router();
const { requireAuth } = require('../middleware/auth');

router.get('/endpoint', requireAuth, async (req, res) => {
  try {
    // L√≥gica da rota
    res.json({ message: 'Sucesso', data: result });
  } catch (error) {
    logger.error('Erro na rota', error);
    res.status(500).json({ 
      error: 'Erro interno',
      details: error.message 
    });
  }
});

module.exports = router;
```

## üìä Checklist para Novas Features Frontend

### ‚úÖ Desenvolvimento Modular
- [ ] **M√≥dulo JS**: Criar/atualizar m√≥dulo espec√≠fico
- [ ] **Estilos CSS**: Adicionar no m√≥dulo CSS apropriado
- [ ] **Responsividade**: Testar em m√∫ltiplos dispositivos
- [ ] **Temas**: Verificar funcionamento dark/light
- [ ] **Loading States**: Implementar para opera√ß√µes ass√≠ncronas
- [ ] **Error Handling**: Toast notifications apropriadas

### ‚úÖ Performance e Compatibilidade
- [ ] **Tamanho**: Verificar impacto no bundle total
- [ ] **Browser Testing**: IE11+, Chrome 60+, Firefox 55+
- [ ] **Mobile**: Testar touch, gestos, viewport
- [ ] **Acessibilidade**: ARIA labels, contraste, navega√ß√£o teclado

### ‚úÖ Integra√ß√£o
- [ ] **API**: Seguir padr√µes de resposta
- [ ] **Autentica√ß√£o**: Aplicar middleware quando necess√°rio
- [ ] **Logs**: Implementar logging estruturado
- [ ] **Build**: Verificar compatibilidade com pkg node12-win-x64

